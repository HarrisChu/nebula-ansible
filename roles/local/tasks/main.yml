---
# local preparation on Control Machine

- name: make sure that the Ansible version is Ansible 2.4.2 later, otherwise a compatibility issue occurs
  assert:
    that:
      - ansible_version.full|version_compare('2.4.2', '>')

- name: detect outbound network
  shell: >
    warn=no
    curl -s --connect-timeout 10 www.baidu.com 2>/dev/null >/dev/null; echo $?
  changed_when: false
  register: outbound_network_st

- name: set outbound network fact
  set_fact: has_outbound_network={{ outbound_network_st.stdout.strip() == '0' }}

- include_vars: file={{ playbook_dir }}/conf/packages.yml

- name: create a directory of downloads if it does not exist
  become: yes
  file:
    path: "{{ packages_dir }}"
    state: directory
    mode: 0755

- name: check if the nebula package has existed when there is not outbound network
  stat: 
    path: "{{ packages_dir }}/{{ item.filename }}"
  with_items: "{{ nebula_packages }}"
  register: stat_result
  when: not has_outbound_network

- fail:
    msg: "The Control Machine don't have access to the Internet to download nebula package, and the package is also not found in {{ packageds_dir }} on the Control Machine."
  when: 
    - not has_outbound_network
    - not stat_result.stat.exists

# do actual downloading

- name: download nebula graph package
  become: yes
  get_url:
    url: "{{ item.url }}"
    dest: "{{ packages_dir }}"
    mode: 0755
  register: get_url_result
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  with_items: "{{ nebula_packages }}"
  when: has_outbound_network
